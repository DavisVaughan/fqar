document()
?transect_glance
library(fqar)
?transect_glance
document()
library(fqar)
tyler <- download_transect(6352)
transect_glance(tyler)
t <- transect_glance(tyler)
view(t)
document()
library(fqar)
?transect_glance
?assessment_inventory
edison <- download_assessment(25002)
assessment_inventory(edison)
inv <- assessment_inventory(edison)
?transect_inventory
tyler <- download_transect(6352)
transect_glance(tyler)
t <- transect_glance(tyler)
inv <- transect_inventory(tyler)
?assessment_list_glance
maine <- download_assessment_list(database = 56)
assessment_list_glance(maine)
maine <- assessment_list_glance(maine)
view(maine)
document()
library(fqar)
?assessment_list_glance
?transect_list_glance
transect_list <- download_transect_list(149, id %in% c(3400, 3427))
v <- transect_list_glance(transect_list)
view(v)
?transect_phys
document()
library(fqar)
?transect_phys
tyler <- download_transect(6352)
t <-transect_phys(tyler)
view(t)
document()
library(fqar)
?transect_phys
?chicago
?diamonds
?missouri
view(missouri)
view(chicago)
document()
check()
?download_assessment
document()
library(fqar)
?assessment_glance
document()
library(fqar)
?assessment_glance
document()
library(fqar)
?assessment_glance
?transect_glance
document()
check()
test_custom <- download_transect(7025) |>
transect_glance()  # custom database
expect_equal(ncol(test_custom), 54)
expect_equal(nrow(test_custom), 1)
ncol(test_custom)
nrow(test_custom)
names(test_custom)[9]
names(test_custom)[13]
typeof(test_custom$`Total Mean C`)
test_that("transect_glance works", {
expect_error(transect_glance("hi"))
test_manual <- transect_glance(test_transect) # manual download
expect_equal(ncol(test_manual), 54)
expect_equal(names(test_manual)[9], "FQA DB Region")
expect_equal(names(test_manual)[13], "Custom FQA DB Name")
expect_equal(typeof(test_manual$`Total Mean C`), "double")
expect_equal(test_manual[[25]], "Transect")
skip_on_cran()
test_normal <- download_transect(4492) |>
transect_glance()  # normal database
expect_equal(ncol(test_normal), 54)
expect_equal(nrow(test_normal), 1)
expect_equal(names(test_normal)[9], "FQA DB Region")
expect_equal(names(test_normal)[13], "Custom FQA DB Name")
expect_equal(typeof(test_normal$`Total Mean C`), "double")
test_custom <- download_transect(7025) |>
transect_glance()  # custom database
expect_equal(ncol(test_custom), 54)
expect_equal(nrow(test_custom), 1)
expect_equal(names(test_custom)[9], "FQA DB Region")
expect_equal(names(test_custom)[13], "Custom FQA DB Name")
expect_equal(typeof(test_custom$`Total Mean C`), "double")
test_omernik <- download_transect(6444) |>
transect_glance()  # includes omernik classification
expect_equal(ncol(test_omernik), 54)
expect_equal(nrow(test_omernik), 1)
expect_equal(names(test_omernik)[9], "FQA DB Region")
expect_equal(names(test_omernik)[13], "Custom FQA DB Name")
expect_equal(typeof(test_omernik$`Total Mean C`), "double")
})
check()
check_win_release()
`.data`
?`.data`
library(devtools)
check_win_release()
?use_package
?use_package("rlang", min_version = "1.0.2")
use_package("rlang", min_version = "1.0.2")
check_win_release()
library(devtools)
check()
use_package("rlang")
use_package("rlang", min_version = NULL)
document()
check()
?check_win_release()
check_win_release()
install.packages(rhub)
install.packages("rhub")
library(rhub)
validate_email()
rhub::check_on_windows()
view(chicago)
library(tidyverse)
load_all()
view(chicago)
chicago$`Site Name`
unique(chicago$`Site Name`)
glimpse(chicago)
unique(chicago$`Weather Notes`)
unique(chicago$Practitioner)
unique(chicago$Latitude)
unique(chicago$Longitude)
glimpse(chicago)
glimpse(missouri)
unique(missouri$`Weather Notes`)
validUTF8(missouri$Title)
sum(!validUTF8(missouri$Title))
sum(!validUTF8(missouri[[1]]))
missouri[[1]]
sum(!validUTF8(missouri[[2]]))
missouri[[2]]
sum(!validUTF8(missouri[[3]]))
sum(!validUTF8(missouri[[4]]))
sum(!validUTF8(missouri[[5]]))
sum(!validUTF8(missouri[[6]]))
sum(!validUTF8(missouri[[7]]))
sum(!validUTF8(missouri[[8]]))
sum(!validUTF8(missouri[[9]]))
sum(!validUTF8(missouri[[10]]))
sum(!validUTF8(missouri[[11]]))
sum(!validUTF8(missouri[[12]]))
?seq_along
seq_along(3:6)
probs <- double(100)
probs <- double(ncol(missouri))
for (i in 1:ncol(missouri))){
for (i in 1:ncol(missouri)) {
if class(missouri[[i]] == "character"){
for (i in 1:ncol(missouri)) {
if (class(missouri[[i]]) == "character") {
probs[i] <- sum(!validUTF8(missouri[[2]]))
}
}
class(missouri[[2]]) == "character")
class(missouri[[2]]) == "character"
for (i in 1:ncol(missouri)) {
if (class(missouri[[i]]) == "character") {
probs[i] <- sum(!validUTF8(missouri[[2]]))
}
}
i <- 2
if (class(missouri[[i]]) == "character") {
probs[i] <- sum(!validUTF8(missouri[[2]]))
}
for (i in 1:ncol(missouri)) {
if (class(missouri[[i]]) == "character") {
probs[i] <- sum(!validUTF8(missouri[[2]]))
}
}
for (i in 1:ncol(missouri)) {
if (class(missouri[[i]]) == "character") {
probs[i] <- sum(!validUTF8(missouri[[i]]))
}
}
probs
probs <- double(ncol(chicago))
probs[i] <- sum(!validUTF8(chicago[[i]]))
for (i in 1:ncol(chicago)) {
if (class(missouri[[i]]) == "character") {
probs[i] <- sum(!validUTF8(chicago[[i]]))
}
}
probs
glimpse(chicago)
for (i in 1:ncol(chicago)) {
if (class(missouri[[i]]) == "numeric") {
probs[i] <- sum(!validUTF8(chicago[[i]]))
}
}
sum(!validUTF8(chicago[[50]]))
validUTF8(chicago[[5]])
check_on_linux()
library(devtools)
?use_package
?use_data
chicago_list <- download_assessment_list(database_id = 149)
load_all()
chicago_list <- download_assessment_list(database_id = 149)
chicago <- assessment_list_glance(chicago_list)
usethis::use_data(chicago, overwrite = TRUE, ascii = TRUE)
missouri_list <- download_assessment_list(database_id = 63)
missouri <- assessment_list_glance(missouri_list)
usethis::use_data(missouri, overwrite = TRUE, ascii = TRUE)
?chicago
?missouri
view(missouri)
library(tidyverse)
view(missouri)
document(0)
document()
check()
library(rhub)
rhub::check_on_windows()
view(chicago)
t <- nonUTF <- iconv(chicago$Title, from="UTF-8", to="ASCII")
t
is_identical_to(t, chicago$Title)
identical(t, chicago$Title)
df <- data.frame(orig = chicago$Title, new = t)
view(df)
?diff
?setdiff
tt <- chicago$Title == t
tt
iconv(chicago$Title[497])
iconv(chicago$Title[499])
t <- nonUTF <- iconv(chicago$Title[499], from="UTF-8", to="ASCII")
t
chicago$Title[499]
chicago$Title[499] <- "Dune Acres - Elmore East" # manually making the hyphen standard
t <- iconv(chicago$`Site Name`, from="UTF-8", to="ASCII")
t == chicago$`Site Name`
iconv(chicago$[`Site Name`][4], from="UTF-8", to="ASCII") ==chicago$[`Site Name`][4]
iconv(chicago[[4]], from="UTF-8", to="ASCII") ==chicago[[4]]
iconv(chicago[[4]], from="UTF-8", to="ASCII")
after <- sum(is.na(iconv(chicago[[4]], from="UTF-8", to="ASCII"))
before <- sum(is.na(chicago[[4]]))
before <- sum(is.na(chicago[[4]]))
after <- sum(is.na(iconv(chicago[[4]], from="UTF-8", to="ASCII")))
after-before
sum(is.na(iconv(chicago[[4]], from="UTF-8", to="ASCII"))) - sum(is.na(chicago[[4]]))
sum(is.na(iconv(chicago[[5]], from="UTF-8", to="ASCII"))) - sum(is.na(chicago[[5]]))
# This hould be zero when the encoding is ok
sum(is.na(iconv(chicago[[5]], from="UTF-8", to="ASCII"))) - sum(is.na(chicago[[5]]))
differences <- double(52)
differences <- double(52)
for (i in seq_along(names(chicago))){
differences[i] <- sum(is.na(iconv(chicago[[i]], from="UTF-8", to="ASCII"))) - sum(is.na(chicago[[i]]))
}
differences
sum(is.na(iconv(chicago[[52]], from="UTF-8", to="ASCII")))
identical(iconv(chicago[[52]], from="UTF-8", to="ASCII")), chicago[[52]]
identical(iconv(chicago[[52]], from="UTF-8", to="ASCII"), chicago[[52]])
chic_new <- iconv(chicago, from="UTF-8", to="ASCII"))
chic_new <- iconv(chicago, from="UTF-8", to="ASCII")
view(chic_new)
?mutate
?across
chic_new <- chicago |>
mutate(across(everything, iconv(.x, from="UTF-8", to="ASCII")))
?lapply
chic_new <- lapply(chicago, mean)
chic_new <- lapply(chicago,
iconv,
from="UTF-8",
to="ASCII")
chic_df <- as.data.frame(chic_new)
view(chic_df)
view(chicago)
names(chic_df) <- names(chicago)
view(chic_df)
glimpse(chicago_df)
glimpse(chic_df)
glimpse(chicago)
names(chicago)
chars <- c(1, 3:20)
chars <- c(1, 3:20)
chic_new <- chicago |>
mutate(across(chars, iconv, from="UTF-8", to="ASCII")))
chic_new <- chicago |>
mutate(across(chars, iconv, from="UTF-8", to="ASCII"))
view(chic_new)
?all_of
chic_new <- chicago |>
mutate(across(all_of(chars), iconv, from="UTF-8", to="ASCII"))
names(chic_new) <- names(chicago)
identical(chic_new, chicago)
names(chic_df) <- names(chicago)
identical(chic_df, chicago)
chicago[[3]]
for (i in chars){
chicago[i] <- iconv(chicago[i], from="UTF-8", to="ASCII")
}
chicago <- assessment_list_glance(chicago_list)
chicago_new <- chicago
for (i in chars){
chicago_new[i] <- iconv(chicago[i], from="UTF-8", to="ASCII")
}
identical(chicago, chicago_new)
identical(chicago[1], chicago_new[1])
identical(chicago[2], chicago_new[2])
identical(chicago[3], chicago_new[3])
identical(chicago[4], chicago_new[4])
identical(chicago[5], chicago_new[5])
chicago$Title[499] <- "Dune Acres - Elmore East" # manually making the hyphen standard
identical(chicago[1], chicago_new1)
identical(chicago[1], chicago_new[1])
# This hould be zero when the encoding is ok
sum(is.na(iconv(chicago[[5]], from="UTF-8", to="ASCII"))) - sum(is.na(chicago[[5]]))
sum(is.na(iconv(chicago[[4]], from="UTF-8", to="ASCII"))) - sum(is.na(chicago[[4]]))
sum(is.na(iconv(chicago[[3]], from="UTF-8", to="ASCII"))) - sum(is.na(chicago[[3]]))
chicago_new <- chicago
for (i in chars){
chicago_new[i] <- iconv(chicago[i], from="UTF-8", to="ASCII")
}
identical(chicago_new[1], chicago[1]
identical(chicago_new[1], chicago[1]
identical(chicago_new[1], chicago[1])
df <- data.frame(old = chicago[1], new = chicago_new[1])
view(df)
str(chicago[1])
df <- data.frame(old = chicago[[1]], new = chicago_new[[1]])
view(df)
chicago_new <- chicago
for (i in chars){
chicago_new[[i]] <- iconv(chicago[[i]], from="UTF-8", to="ASCII")
}
identical(chicago_new[1], chicago[1])
df <- data.frame(old = chicago[[1]], new = chicago_new[[1]])
view(df)
identical(chicago_new, chicago)
chicago <- assessment_list_glance(chicago_list)
identical(chicago_new, chicago)
chicago$Title[499] <- "Dune Acres - Elmore East" # manually making the hyphen standard
identical(chicago_new, chicago)
missouri <- assessment_list_glance(missouri_list)
miiouri_new <- missouri
for (i in chars){
missouri_new[[i]] <- iconv(missouri[[i]], from="UTF-8", to="ASCII")
}
identical(missouri_new, missouri)
missouri_new <- missouri
for (i in chars){
missouri_new[[i]] <- iconv(missouri[[i]], from="UTF-8", to="ASCII")
}
identical(missouri_new, missouri)
usethis::use_data(chicago, overwrite = TRUE, ascii = TRUE)
check()
devtools::check()
rhub::check_on_windows()
rhub::check_on_linux()
update.packages()
library(devtools)
check()
document()
check()
?use_github_action_check_standard
usethis::use_github_action_check_standard()
devtools::release()
spell_check()
spell_check()
devtools::release()
check_rhub()
devtools::release()
?assessment_glance
library(fqar)
?assessment_glance
?chicago
document()
library(rhub)
check_rhub()
document()
devtools::release()
library(devtools)
citation()
citation("dplyr")
databases <- index_fqa_databases()
load_all()
databases <- index_fqa_databases()
chicago_2017_assessments <- index_fqa_assessments(149)
chicago_2017_transects <- index_fqa_transects(149)
databases <- index_fqa_databases()
chicago_assessments <- index_fqa_assessments(1) # Edison dune and swale has id number 25002.
edison <- download_assessment(25002)
edison_tidy <- assessment_glance(edison)
edison_species <- assessment_inventory(edison)
somme_assessments <- download_assessment_list(1, site == "Somme Woods")
somme_summary <- assessment_list_glance(somme_assessments)
cbg <- download_transect(5932)
cbg_tidy <- transect_glance(cbg)
cbg_species <- transect_inventory(cbg)
cbg_phys <- transect_phys(cbg)
dupont <- download_transect_list(1, site == "DuPont Natural Area")
dupont <- download_transect_list(1, site == "DuPont Natural Area")
edison <- download_assessment(25002)
assessment_glance(edison)
edison <- download_assessment(25002)
assessment_inventory(edison)
maine <- download_assessment_list(database = 56)
assessment_list_glance(maine)
tyler <- download_transect(6352)
transect_glance(tyler)
tyler <- download_transect(6352)
transect_inventory(tyler)
transect_list <- download_transect_list(149, id %in% c(3400, 3427))
transect_list <- download_transect_list(149, id %in% c(3400, 3427))
transect_list_glance(transect_list)
transect_list_glance(transect_list)
t <- transect_list_glance(transect_list)
view(t)
library(tidyverse)
t
transect_list_glance(transect_list)
document()
library(fqar)
transect_list_glance(transect_list)
check()
document()
check()
document()
check()
check()
document()
document()
check()
document()
check()
document()
check()
document()
check()
document()
check()
use_citation()
document()
document()
check()
document()
library(fqar)
?transect_list_glance
document()
document()
check()
document()
check()
document()
check()
document()
check()
rhub::check()
library(rhub)
?check_for_cran
check_for_cran()
citation()
document()
document()
check()
check_for_cran()
devtools::check()
check_for_cran()
document()
check_for_cran()
spell_check()
spell_check()
spell_check()
spell_check()
devtools::check()
devtools::release()
glimpse(gss_cat)
geom_bar() +
ggplot(gss_cat, aes(x = marital)) +
geom_bar() +
theme_minimal()
ggplot(gss_cat, aes(x = fct_infreq(marital),
fill = fct_infreq(marital))) +
geom_bar() +
theme_minimal()
ggplot(gss_cat, aes(x = fct_infreq(marital),
fill = fct_infreq(marital))) +
geom_bar() +
labs(x =  "Marital status") +
scale_fill_brewer(palette = "Set2") +
theme_minimal()
ggplot(gss_cat, aes(x = fct_infreq(marital),
fill = fct_infreq(marital))) +
geom_bar() +
labs(x =  "Marital status") +
scale_fill_brewer(palette = "Set2") +
theme_minimal() +
theme(legend.position = "none")
document()
library(devtools)
library(devtools)
library(devtools)
library(tidyverse)
library(devtools)
